{"version":3,"sources":["polymer/polymer-element-scanner.ts"],"names":[],"mappings":"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","file":"polymer-element-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as estraverse from 'estraverse';\nimport * as estree from 'estree';\n\nimport {getIdentifierName} from '../javascript/ast-value';\nimport {Visitor} from '../javascript/estree-visitor';\nimport {getAttachedComment, getEventComments, getOrInferPrivacy, isFunctionType, objectKeyToString, toScannedMethod} from '../javascript/esutil';\nimport {JavaScriptDocument} from '../javascript/javascript-document';\nimport {JavaScriptScanner} from '../javascript/javascript-scanner';\nimport * as jsdoc from '../javascript/jsdoc';\nimport {Severity, Warning, WarningCarryingException} from '../model/model';\n\nimport {getBehaviorAssignmentOrWarning} from './declaration-property-handlers';\nimport {declarationPropertyHandlers, PropertyHandlers} from './declaration-property-handlers';\nimport * as docs from './docs';\nimport {parseExpressionInJsStringLiteral} from './expression-scanner';\nimport {toScannedPolymerProperty} from './js-utils';\nimport {ScannedPolymerElement, ScannedPolymerProperty} from './polymer-element';\n\nexport class PolymerElementScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const visitor = new ElementVisitor(document);\n    await visit(visitor);\n    return {features: visitor.features, warnings: visitor.warnings};\n  }\n}\n\nclass ElementVisitor implements Visitor {\n  features: ScannedPolymerElement[] = [];\n\n  /**\n   * The element being built during a traversal;\n   */\n  element: ScannedPolymerElement|null = null;\n  propertyHandlers: PropertyHandlers|null = null;\n  classDetected: boolean = false;\n  warnings: Warning[] = [];\n\n  document: JavaScriptDocument;\n  constructor(document: JavaScriptDocument) {\n    this.document = document;\n  }\n\n  enterClassDeclaration(node: estree.ClassDeclaration, _: estree.Node) {\n    this.classDetected = true;\n    const className = node.id.name;\n    const docs = jsdoc.parseJsdoc(getAttachedComment(node) || '');\n    this.element = new ScannedPolymerElement({\n      astNode: node,\n      description: docs.description,\n      events: getEventComments(node),\n      sourceRange: this.document.sourceRangeForNode(node), className,\n      privacy: getOrInferPrivacy(className, docs),\n      abstract: jsdoc.hasTag(docs, 'abstract'),\n      attributes: new Map(),\n      properties: [],\n      behaviors: [],\n      extends: undefined,\n      jsdoc: docs,\n      listeners: [],\n      methods: new Map(),\n      staticMethods: new Map(),\n      mixins: [],\n      observers: [],\n      superClass: undefined,\n      tagName: undefined\n    });\n    this.propertyHandlers =\n        declarationPropertyHandlers(this.element, this.document);\n  }\n\n  leaveClassDeclaration(_: estree.ClassDeclaration, _parent: estree.Node) {\n    for (const property of this.element!.properties.values()) {\n      docs.annotate(property);\n    }\n    // TODO(justinfagnani): this looks wrong, class definitions can be nested\n    // so a definition in a method in a Polymer() declaration would end the\n    // declaration early. We should track which class induced the current\n    // element and finish the element when leaving _that_ class.\n    this.element = null;\n    this.propertyHandlers = null;\n    this.classDetected = false;\n  }\n\n  enterAssignmentExpression(node: estree.AssignmentExpression, _: estree.Node) {\n    if (!this.element) {\n      return;\n    }\n    const left = <estree.MemberExpression>node.left;\n    if (left && left.object && left.object.type !== 'ThisExpression') {\n      return;\n    }\n    const prop = <estree.Identifier>left.property;\n    if (prop && prop.name && this.propertyHandlers) {\n      const name = prop.name;\n      if (name in this.propertyHandlers) {\n        this.propertyHandlers[name](node.right);\n      }\n    }\n  }\n\n  enterMethodDefinition(node: estree.MethodDefinition, _parent: estree.Node) {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n\n    const prop = Object.assign({}, node, {\n      method: true,\n      shorthand: false,\n      computed: false,\n    });\n\n    if (node.kind === 'get') {\n      const returnStatement = <estree.ReturnStatement>node.value.body.body[0];\n      const argument = <estree.ArrayExpression>returnStatement.argument;\n      const propDesc = toScannedPolymerProperty(\n          prop, this.document.sourceRangeForNode(node)!, this.document);\n      docs.annotate(propDesc);\n\n      // We only support observers and behaviors getters that return array\n      // literals.\n      if ((propDesc.name === 'behaviors' || propDesc.name === 'observers') &&\n          !Array.isArray(argument.elements)) {\n        return;\n      }\n\n      if (propDesc.name === 'behaviors') {\n        argument.elements.forEach((argNode) => {\n          const result = getBehaviorAssignmentOrWarning(argNode, this.document);\n          if (result.kind === 'warning') {\n            element.warnings.push(result.warning);\n          } else {\n            element.behaviorAssignments.push(result.assignment);\n          }\n        });\n        return;\n      }\n\n      if (propDesc.name === 'observers') {\n        argument.elements.forEach((elementObject) => {\n          const parseResult = parseExpressionInJsStringLiteral(\n              this.document, elementObject, 'callExpression');\n          element.warnings = element.warnings.concat(parseResult.warnings);\n          let expressionText = undefined;\n          if (elementObject.type === 'Literal') {\n            expressionText = elementObject.raw;\n          }\n          element.observers.push({\n            javascriptNode: elementObject,\n            expression: expressionText,\n            parsedExpression: parseResult.databinding\n          });\n        });\n        return;\n      }\n\n      element.addProperty(propDesc);\n      return;\n    }\n\n    if (node.kind === 'method') {\n      const methodDesc = toScannedMethod(\n          prop, this.document.sourceRangeForNode(node)!, this.document);\n      docs.annotate(methodDesc);\n      element.addMethod(methodDesc);\n    }\n  }\n\n  enterCallExpression(node: estree.CallExpression, parent: estree.Node) {\n    // When dealing with a class, enterCallExpression is called after the\n    // parsing actually starts\n    if (this.classDetected) {\n      return estraverse.VisitorOption.Skip;\n    }\n\n    const callee = node.callee;\n    if (callee.type === 'Identifier') {\n      if (callee.name === 'Polymer') {\n        const rawDescription = getAttachedComment(parent);\n        let className: undefined|string = undefined;\n        if (parent.type === 'AssignmentExpression') {\n          className = getIdentifierName(parent.left);\n        } else if (parent.type === 'VariableDeclarator') {\n          className = getIdentifierName(parent.id);\n        }\n        const jsDoc = jsdoc.parseJsdoc(rawDescription || '');\n        this.element = new ScannedPolymerElement({\n          className,\n          astNode: node,\n          description: jsDoc.description,\n          events: getEventComments(parent),\n          sourceRange: this.document.sourceRangeForNode(node.arguments[0]),\n          privacy: getOrInferPrivacy('', jsDoc),\n          abstract: jsdoc.hasTag(jsDoc, 'abstract'),\n          attributes: new Map(),\n          properties: [],\n          behaviors: [],\n          extends: undefined,\n          jsdoc: jsDoc,\n          listeners: [],\n          methods: new Map(),\n          staticMethods: new Map(),\n          mixins: [],\n          observers: [],\n          superClass: undefined,\n          tagName: undefined\n        });\n        this.element.description = (this.element.description || '').trim();\n        this.propertyHandlers =\n            declarationPropertyHandlers(this.element, this.document);\n      }\n    }\n  }\n\n  leaveCallExpression(node: estree.CallExpression, _: estree.Node) {\n    const callee = node.callee;\n    const args = node.arguments;\n    if (callee.type === 'Identifier' && args.length === 1 &&\n        args[0].type === 'ObjectExpression') {\n      if (callee.name === 'Polymer') {\n        if (this.element) {\n          this.features.push(this.element);\n          this.element = null;\n          this.propertyHandlers = null;\n        }\n      }\n    }\n  }\n\n  enterObjectExpression(node: estree.ObjectExpression, _: estree.Node) {\n    // When dealing with a class, there is no single object that we can\n    // parse to retrieve all properties.\n    if (this.classDetected) {\n      return estraverse.VisitorOption.Skip;\n    }\n\n    const element = this.element;\n    if (element) {\n      const getters: {[name: string]: ScannedPolymerProperty} = {};\n      const setters: {[name: string]: ScannedPolymerProperty} = {};\n      const definedProperties: {[name: string]: ScannedPolymerProperty} = {};\n      for (const prop of node.properties) {\n        const name = objectKeyToString(prop.key);\n        if (!name) {\n          element.warnings.push(new Warning({\n            message:\n                `Can't determine name for property key from expression with type ${\n                                                                                   prop.key\n                                                                                       .type\n                                                                                 }.`,\n            code: 'cant-determine-property-name',\n            severity: Severity.WARNING,\n            sourceRange: this.document.sourceRangeForNode(prop.key)!,\n            parsedDocument: this.document\n          }));\n          continue;\n        }\n\n        if (!this.propertyHandlers) {\n          continue;\n        }\n\n        if (name in this.propertyHandlers) {\n          this.propertyHandlers[name](prop.value);\n          continue;\n        }\n\n        try {\n          const scannedPolymerProperty = toScannedPolymerProperty(\n              prop, this.document.sourceRangeForNode(prop)!, this.document);\n          if (prop.kind === 'get') {\n            getters[scannedPolymerProperty.name] = scannedPolymerProperty;\n          } else if (prop.kind === 'set') {\n            setters[scannedPolymerProperty.name] = scannedPolymerProperty;\n          } else if (prop.method === true || isFunctionType(prop.value)) {\n            const scannedPolymerMethod = toScannedMethod(\n                prop, this.document.sourceRangeForNode(prop)!, this.document);\n            element.addMethod(scannedPolymerMethod);\n          } else {\n            element.addProperty(scannedPolymerProperty);\n          }\n        } catch (e) {\n          if (e instanceof WarningCarryingException) {\n            element.warnings.push(e.warning);\n            continue;\n          }\n          throw e;\n        }\n      }\n      Object.keys(getters).forEach((name) => {\n        const prop = getters[name];\n        definedProperties[prop.name] = prop;\n        prop.readOnly = !!setters[prop.name];\n      });\n      Object.keys(setters).forEach((name) => {\n        const prop = setters[name];\n        if (!(prop.name in definedProperties)) {\n          definedProperties[prop.name] = prop;\n        }\n      });\n      Object.keys(definedProperties).forEach((name) => {\n        const prop = definedProperties[name];\n        element.addProperty(prop);\n      });\n      return estraverse.VisitorOption.Skip;\n    }\n  }\n}\n"]}