{"version":3,"sources":["polymer/pseudo-element-scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAEH,6BAA6B;AAK7B,iDAAuD;AACvD,6CAA6C;AAE7C,iCAA6C;AAC7C,uDAAwD;AAExD;;;;;GAKG;AACH;IACQ,IAAI,CACN,QAA4B,EAC5B,KAA8C;;YAChD,MAAM,QAAQ,GAA4B,EAAE,CAAC;YAE7C,MAAM,KAAK,CAAC,CAAC,IAAa;gBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;oBACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBACzC,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;oBAC7D,MAAM,OAAO,GAAG,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC;oBAC5C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACZ,MAAM,OAAO,GAAG,IAAI,uCAAqB,CAAC;4BACxC,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,OAAO;4BAChB,KAAK,EAAE,WAAW;4BAClB,WAAW,EAAE,WAAW,CAAC,WAAW;4BACpC,WAAW,EAAE,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC;4BAC9C,OAAO,EAAE,0BAAiB,CAAC,OAAO,EAAE,WAAW,CAAC;4BAChD,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC;4BAE/C,UAAU,EAAE,EAAE;4BACd,UAAU,EAAE,IAAI,GAAG,EAAE;4BACrB,MAAM,EAAE,IAAI,GAAG,EAAE;4BACjB,SAAS,EAAE,EAAE;4BACb,SAAS,EAAE,EAAE;4BACb,SAAS,EAAE,SAAS;4BACpB,OAAO,EAAE,SAAS;4BAClB,aAAa,EAAE,IAAI,GAAG,EAAE;4BACxB,OAAO,EAAE,IAAI,GAAG,EAAE;4BAClB,MAAM,EAAE,EAAE;4BACV,SAAS,EAAE,EAAE;4BACb,UAAU,EAAE,SAAS;yBACtB,CAAC,CAAC;wBACH,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;wBACtB,4BAAqB,CAAC,OAAO,CAAC,CAAC;wBAC/B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAC9B,CAAC;KAAA;CACF;AA3CD,oDA2CC","file":"pseudo-element-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\nimport {ASTNode} from 'parse5';\n\nimport {HtmlVisitor, ParsedHtmlDocument} from '../html/html-document';\nimport {HtmlScanner} from '../html/html-scanner';\nimport {getOrInferPrivacy} from '../javascript/esutil';\nimport * as jsdoc from '../javascript/jsdoc';\n\nimport {annotateElementHeader} from './docs';\nimport {ScannedPolymerElement} from './polymer-element';\n\n/**\n * A Polymer pseudo-element is an element that is declared in an unusual way,\n * such\n * that the analyzer couldn't normally analyze it, so instead it is declared in\n * comments.\n */\nexport class PseudoElementScanner implements HtmlScanner {\n  async scan(\n      document: ParsedHtmlDocument,\n      visit: (visitor: HtmlVisitor) => Promise<void>) {\n    const elements: ScannedPolymerElement[] = [];\n\n    await visit((node: ASTNode) => {\n      if (dom5.isCommentNode(node) && node.data &&\n          node.data.includes('@pseudoElement')) {\n        const parsedJsdoc = jsdoc.parseJsdoc(node.data);\n        const pseudoTag = jsdoc.getTag(parsedJsdoc, 'pseudoElement');\n        const tagName = pseudoTag && pseudoTag.name;\n        if (tagName) {\n          const element = new ScannedPolymerElement({\n            astNode: node,\n            tagName: tagName,\n            jsdoc: parsedJsdoc,\n            description: parsedJsdoc.description,\n            sourceRange: document.sourceRangeForNode(node),\n            privacy: getOrInferPrivacy(tagName, parsedJsdoc),\n            abstract: jsdoc.hasTag(parsedJsdoc, 'abstract'),\n\n            properties: [],\n            attributes: new Map(),\n            events: new Map(),\n            listeners: [],\n            behaviors: [],\n            className: undefined,\n            extends: undefined,\n            staticMethods: new Map(),\n            methods: new Map(),\n            mixins: [],\n            observers: [],\n            superClass: undefined\n          });\n          element.pseudo = true;\n          annotateElementHeader(element);\n          elements.push(element);\n        }\n      }\n    });\n    return {features: elements};\n  }\n}\n"]}