{"version":3,"sources":["html/html-style-scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAEH,6BAA6B;AAC7B,6BAA0C;AAE1C,0CAAmI;AAKnI,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;AAE1B,MAAM,cAAc,GAAG,CAAC,CAAC,GAAG,CACxB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAExE,MAAM,WAAW,GAAG,CAAC,CAAC,GAAG,CACrB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EACpB,CAAC,CAAC,0BAA0B,CAAC,KAAK,EAAE,YAAY,CAAC,EACjD,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAEvB,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AAEtD;IACQ,IAAI,CACN,QAA4B,EAC5B,KAA8C;;YAChD,MAAM,QAAQ,GAA4C,EAAE,CAAC;YAE7D,MAAM,KAAK,CAAC,CAAM,IAAI;gBACpB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC9B,EAAE,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;wBACvB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAE,CAAC;wBAC9C,MAAM,SAAS,GAAG,aAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC3B,YAAY,EACZ,SAAS,EACT,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAE,EACpD,IAAI,EACJ,IAAI,CAAC,CAAC,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;wBAC3C,MAAM,cAAc,GAAG,6CAAqC,CAAC,IAAI,CAAC,CAAC;wBACnE,MAAM,WAAW,GAAG,8BAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;wBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,6BAAqB,CACnC,KAAK,EACL,QAAQ,EACR,cAAc,EACd,WAAW,EACX,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,IAAI,CAAC,CAAC,CAAC;oBACb,CAAC;gBACH,CAAC;YACH,CAAC,CAAA,CAAC,CAAC;YAEH,MAAM,CAAC,EAAC,QAAQ,EAAC,CAAC;QACpB,CAAC;KAAA;CACF;AApCD,4CAoCC","file":"html-style-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\nimport {resolve as resolveUrl} from 'url';\n\nimport {getAttachedCommentText, getLocationOffsetOfStartOfTextContent, ScannedImport, ScannedInlineDocument} from '../model/model';\n\nimport {HtmlVisitor, ParsedHtmlDocument} from './html-document';\nimport {HtmlScanner} from './html-scanner';\n\nconst p = dom5.predicates;\n\nconst isStyleElement = p.AND(\n    p.hasTagName('style'),\n    p.OR(p.NOT(p.hasAttr('type')), p.hasAttrValue('type', 'text/css')));\n\nconst isStyleLink = p.AND(\n    p.hasTagName('link'),\n    p.hasSpaceSeparatedAttrValue('rel', 'stylesheet'),\n    p.hasAttr('href'));\n\nconst isStyleNode = p.OR(isStyleElement, isStyleLink);\n\nexport class HtmlStyleScanner implements HtmlScanner {\n  async scan(\n      document: ParsedHtmlDocument,\n      visit: (visitor: HtmlVisitor) => Promise<void>) {\n    const features: (ScannedImport|ScannedInlineDocument)[] = [];\n\n    await visit(async(node) => {\n      if (isStyleNode(node)) {\n        const tagName = node.nodeName;\n        if (tagName === 'link') {\n          const href = dom5.getAttribute(node, 'href')!;\n          const importUrl = resolveUrl(document.baseUrl, href);\n          features.push(new ScannedImport(\n              'html-style',\n              importUrl,\n              document.sourceRangeForNode(node)!,\n              document.sourceRangeForAttributeValue(node, 'href')!,\n              node,\n              true));\n        } else {\n          const contents = dom5.getTextContent(node);\n          const locationOffset = getLocationOffsetOfStartOfTextContent(node);\n          const commentText = getAttachedCommentText(node) || '';\n          features.push(new ScannedInlineDocument(\n              'css',\n              contents,\n              locationOffset,\n              commentText,\n              document.sourceRangeForNode(node)!,\n              node));\n        }\n      }\n    });\n\n    return {features};\n  }\n}\n"]}