{"version":3,"sources":["scanning/scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG","file":"scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Analyzer} from '../core/analyzer';\nimport {ImmutableArray} from '../model/immutable';\nimport {ScannedFeature, Warning} from '../model/model';\nimport {ParsedDocument} from '../parser/document';\n\n/**\n * An object that can scan and find \"features\" in a particular\n * document type.\n *\n * @template D The document type\n * @template A the AST type\n * @template V the visitor type\n */\nexport interface Scanner<D extends ParsedDocument<A, V>, A, V> {\n  scan(document: D, visit: (visitor: V) => Promise<void>): Promise<{\n    features: ImmutableArray<ScannedFeature>,\n    warnings?: ImmutableArray<Warning>\n  }>;\n}\n\nexport interface ScannerConstructor {\n  new(analyzer: Analyzer): Scanner<any, any, any>;\n}\n"]}