{"version":3,"sources":["css/css-document.ts"],"names":[],"mappings":"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","file":"css-document.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as shady from 'shady-css-parser';\n\nimport {SourceRange} from '../model/model';\nimport {Options, ParsedDocument, StringifyOptions} from '../parser/document';\n\nimport cssbeautify = require('cssbeautify');\n\nexport interface Visitor { visit(node: shady.Node, path: shady.Node[]): void; }\n\nclass ShadyVisitor extends shady.NodeVisitor<void> {\n  private visitors: Visitor[];\n  constructor(visitors: Visitor[]) {\n    super();\n    this.visitors = visitors;\n  }\n  private allVisitors(node: shady.Node) {\n    for (const visitor of this.visitors) {\n      visitor.visit(node, this.path);\n    }\n  }\n  stylesheet(stylesheet: shady.Stylesheet) {\n    this.allVisitors(stylesheet);\n    for (const rule of stylesheet.rules) {\n      this.visit(rule);\n    }\n  }\n  atRule(atRule: shady.AtRule) {\n    this.allVisitors(atRule);\n    if (atRule.rulelist) {\n      this.visit(atRule.rulelist);\n    }\n  }\n  comment(comment: shady.Comment) {\n    this.allVisitors(comment);\n  }\n  rulelist(rulelist: shady.Rulelist) {\n    this.allVisitors(rulelist);\n    for (const rule of rulelist.rules) {\n      this.visit(rule);\n    }\n  }\n  ruleset(ruleset: shady.Ruleset) {\n    this.allVisitors(ruleset);\n    this.visit(ruleset.rulelist);\n  }\n  declaration(declaration: shady.Declaration) {\n    this.allVisitors(declaration);\n    this.visit(declaration.value);\n  }\n  expression(expression: shady.Expression) {\n    this.allVisitors(expression);\n  }\n  discarded(discarded: shady.Discarded) {\n    this.allVisitors(discarded);\n  }\n}\n\nexport class ParsedCssDocument extends ParsedDocument<shady.Node, Visitor> {\n  type = 'css';\n\n  constructor(from: Options<shady.Node>) {\n    super(from);\n  }\n\n  visit(visitors: Visitor[]) {\n    const shadyVisitor = new ShadyVisitor(visitors);\n    shadyVisitor.visit(this.ast);\n  }\n\n  forEachNode(_callback: (node: shady.Node) => void) {\n    throw new Error('Not implemented');\n  }\n\n  protected _sourceRangeForNode(_node: shady.Node): SourceRange {\n    throw new Error('Not implemented');\n  }\n\n  stringify(options?: StringifyOptions) {\n    options = options || {};\n    const beautifulResults = cssbeautify(\n        shadyStringifier.stringify(this.ast),\n        {indent: '  ', autosemicolon: true, openbrace: 'end-of-line'});\n\n    const indent = '  '.repeat(options.indent || 0);\n\n    return beautifulResults.split('\\n')\n               .map((line) => line === '' ? '' : indent + line)\n               .join('\\n') +\n        '\\n';\n  }\n}\n\nconst shadyStringifier = new shady.Stringifier();\n"]}