{"version":3,"sources":["javascript/javascript-parser.ts"],"names":[],"mappings":"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","file":"javascript-parser.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as espree from 'espree';\nimport * as estree from 'estree';\n\nimport {correctSourceRange, InlineDocInfo, LocationOffset, Severity, SourceRange, Warning, WarningCarryingException} from '../model/model';\nimport {Parser} from '../parser/parser';\n\nimport {JavaScriptDocument} from './javascript-document';\n\ndeclare class SyntaxError {\n  message: string;\n  lineNumber: number;\n  column: number;\n}\n\n// TODO(rictic): stop exporting this.\nexport const baseParseOptions = {\n  ecmaVersion: 8,\n  attachComment: true,\n  comment: true,\n  loc: true,\n};\n\nexport class JavaScriptParser implements Parser<JavaScriptDocument> {\n  parse(contents: string, url: string, inlineInfo?: InlineDocInfo<any>):\n      JavaScriptDocument {\n    const isInline = !!inlineInfo;\n    inlineInfo = inlineInfo || {};\n    const result = parseJs(contents, url, inlineInfo.locationOffset);\n    if (result.type === 'failure') {\n      // TODO(rictic): define and return a ParseResult instead of throwing.\n      const minimalDocument = new JavaScriptDocument({\n        url,\n        contents,\n        ast: null as any,\n        locationOffset: inlineInfo.locationOffset,\n        astNode: inlineInfo.astNode, isInline,\n        parsedAsSourceType: 'script',\n      });\n      throw new WarningCarryingException(\n          new Warning({parsedDocument: minimalDocument, ...result.warning}));\n    }\n\n    return new JavaScriptDocument({\n      url,\n      contents,\n      ast: result.program,\n      locationOffset: inlineInfo.locationOffset,\n      astNode: inlineInfo.astNode, isInline,\n      parsedAsSourceType: result.sourceType,\n    });\n  }\n}\n\n\nexport type ParseResult = {\n  type: 'success',\n  sourceType: 'script' | 'module',\n  program: estree.Program\n} | {\n  type: 'failure',\n  warning: {\n    sourceRange: SourceRange,\n    severity: Severity,\n    code: string,\n    message: string\n  }\n};\n\n/**\n * Parse the given contents and return either an AST or a parse error as a\n * Warning.\n *\n * It needs the filename and the location offset to produce correct warnings.\n */\nexport function parseJs(\n    contents: string,\n    file: string,\n    locationOffset?: LocationOffset,\n    warningCode?: string): ParseResult {\n  if (!warningCode) {\n    warningCode = 'parse-error';\n  }\n  const options = Object.assign(\n      {sourceType: 'script' as ('script' | 'module')}, baseParseOptions);\n  try {\n    return {\n      type: 'success',\n      sourceType: 'script',\n      program: espree.parse(contents, options)\n    };\n  } catch (_ignored) {\n    try {\n      options.sourceType = 'module';\n      return {\n        type: 'success',\n        sourceType: 'module',\n        program: espree.parse(contents, options)\n      };\n    } catch (err) {\n      if (err instanceof SyntaxError) {\n        return {\n          type: 'failure',\n          warning: {\n            message: err.message.split('\\n')[0],\n            severity: Severity.ERROR,\n            code: warningCode,\n            sourceRange: correctSourceRange(\n                {\n                  file,\n                  start: {line: err.lineNumber - 1, column: err.column - 1},\n                  end: {line: err.lineNumber - 1, column: err.column - 1}\n                },\n                locationOffset)!\n          }\n        };\n      }\n      throw err;\n    }\n  }\n}\n"]}