{"version":3,"sources":["javascript/javascript-import-scanner.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;;;;;;;;;AAGH,6BAA0C;AAE1C,0CAA6C;AAM7C;IACQ,IAAI,CACN,QAA4B,EAC5B,KAA0C;;YAC5C,MAAM,OAAO,GAAoB,EAAE,CAAC;YAEpC,MAAM,KAAK,CAAC;gBACV,sBAAsB,CAAC,IAA8B,EAAE,CAAc;oBACnE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAe,CAAC;oBAC3C,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,sCAAsC;wBACtC,MAAM,CAAC;oBACT,CAAC;oBACD,MAAM,SAAS,GAAG,aAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;oBACnD,OAAO,CAAC,IAAI,CAAC,IAAI,qBAAa,CAC1B,WAAW,EACX,SAAS,EACT,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAE,EAClC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAE,EACzC,IAAI,EACJ,KAAK,CAAC,CAAC,CAAC;gBACd,CAAC;aACF,CAAC,CAAC;YACH,MAAM,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;QAC3C,CAAC;KAAA;CACF;AAzBD,0DAyBC;AAED,sBAAsB,MAAc;IAClC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,CAAC","file":"javascript-import-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as estree from 'estree';\nimport {resolve as resolveUrl} from 'url';\n\nimport {ScannedImport} from '../model/model';\n\nimport {Visitor} from './estree-visitor';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\n\nexport class JavaScriptImportScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const imports: ScannedImport[] = [];\n\n    await visit({\n      enterImportDeclaration(node: estree.ImportDeclaration, _: estree.Node) {\n        const source = node.source.value as string;\n        if (!isPathImport(source)) {\n          // TODO(justinfagnani): push a warning\n          return;\n        }\n        const importUrl = resolveUrl(document.url, source);\n        imports.push(new ScannedImport(\n            'js-import',\n            importUrl,\n            document.sourceRangeForNode(node)!,\n            document.sourceRangeForNode(node.source)!,\n            node,\n            false));\n      }\n    });\n    return {features: imports, warnings: []};\n  }\n}\n\nfunction isPathImport(source: string): boolean {\n  return /^(\\/|\\.\\/|\\.\\.\\/)/.test(source);\n}\n"]}