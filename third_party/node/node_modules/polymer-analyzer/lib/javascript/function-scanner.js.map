{"version":3,"sources":["javascript/function-scanner.ts"],"names":[],"mappings":"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","file":"function-scanner.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as doctrine from 'doctrine';\nimport * as estree from 'estree';\n\nimport {Warning} from '../model/model';\n\nimport {getIdentifierName, getNamespacedIdentifier} from './ast-value';\nimport {Visitor} from './estree-visitor';\nimport {getAttachedComment, getOrInferPrivacy, isFunctionType, objectKeyToString} from './esutil';\nimport {ScannedFunction} from './function';\nimport {JavaScriptDocument} from './javascript-document';\nimport {JavaScriptScanner} from './javascript-scanner';\nimport * as jsdoc from './jsdoc';\n\nexport class FunctionScanner implements JavaScriptScanner {\n  async scan(\n      document: JavaScriptDocument,\n      visit: (visitor: Visitor) => Promise<void>) {\n    const visitor = new FunctionVisitor(document);\n    await visit(visitor);\n    return {features: Array.from(visitor.functions)};\n  }\n}\n\nclass FunctionVisitor implements Visitor {\n  functions = new Set<ScannedFunction>();\n  document: JavaScriptDocument;\n  warnings: Warning[] = [];\n\n  constructor(document: JavaScriptDocument) {\n    this.document = document;\n  }\n\n  /**\n   * Scan standalone function declarations.\n   */\n  enterFunctionDeclaration(\n      node: estree.FunctionDeclaration, _parent: estree.Node) {\n    this._initFunction(node, getIdentifierName(node.id), node);\n    return;\n  }\n\n  /**\n   * Scan functions assigned to newly declared variables.\n   */\n  enterVariableDeclaration(\n      node: estree.VariableDeclaration, _parent: estree.Node) {\n    if (node.declarations.length !== 1) {\n      return;  // Ambiguous.\n    }\n    const declaration = node.declarations[0];\n    const declarationId = declaration.id;\n    const declarationValue = declaration.init;\n    if (declarationValue && isFunctionType(declarationValue)) {\n      return this._initFunction(\n          node, objectKeyToString(declarationId), declarationValue);\n    }\n  }\n\n  /**\n   * Scan functions assigned to variables and object properties.\n   */\n  enterAssignmentExpression(\n      node: estree.AssignmentExpression, parent: estree.Node) {\n    if (isFunctionType(node.right)) {\n      this._initFunction(parent, objectKeyToString(node.left), node.right);\n    }\n  }\n\n  /**\n   * Scan functions defined inside of object literals.\n   */\n  enterObjectExpression(node: estree.ObjectExpression, _parent: estree.Node) {\n    for (let i = 0; i < node.properties.length; i++) {\n      const prop = node.properties[i];\n      const propValue = prop.value;\n      const name = objectKeyToString(prop.key);\n      if (isFunctionType(propValue)) {\n        this._initFunction(prop, name, propValue);\n        continue;\n      }\n      const comment = getAttachedComment(prop) || '';\n      const docs = jsdoc.parseJsdoc(comment);\n      if (jsdoc.getTag(docs, 'function')) {\n        this._initFunction(prop, name);\n        continue;\n      }\n    }\n  }\n\n  private _initFunction(\n      node: estree.Node, analyzedName?: string, _fn?: estree.Function) {\n    const comment = getAttachedComment(node);\n\n    // Quickly filter down to potential candidates.\n    if (!comment || comment.indexOf('@memberof') === -1) {\n      return;\n    }\n\n    if (!analyzedName) {\n      // TODO(fks): Propagate a warning if name could not be determined\n      return;\n    }\n\n    const docs = jsdoc.parseJsdoc(comment);\n    // TODO(justinfagnani): remove polymerMixin support\n    if (jsdoc.hasTag(docs, 'mixinFunction') ||\n        jsdoc.hasTag(docs, 'polymerMixin')) {\n      // This is a mixin, not a normal function.\n      return;\n    }\n    const functionName = getNamespacedIdentifier(analyzedName, docs);\n    const sourceRange = this.document.sourceRangeForNode(node)!;\n    const returnTag = jsdoc.getTag(docs, 'return');\n    const summaryTag = jsdoc.getTag(docs, 'summary');\n    const summary = (summaryTag && summaryTag.description) || '';\n    const description = docs.description;\n\n    let functionReturn;\n    if (returnTag) {\n      functionReturn = {\n        type: returnTag.type ? doctrine.type.stringify(returnTag.type) :\n                               undefined,\n        desc: returnTag.description || '',\n      };\n    }\n\n    // TODO(justinfagnani): consolidate with similar param processing code in\n    // docs.ts\n    const functionParams: {type: string, desc: string, name: string}[] = [];\n    if (docs.tags) {\n      docs.tags.forEach((tag) => {\n        if (tag.title !== 'param') {\n          return;\n        }\n        functionParams.push({\n          type: tag.type ? doctrine.type.stringify(tag.type) : 'N/A',\n          desc: tag.description || '',\n          name: tag.name || 'N/A'\n        });\n      });\n    }\n    // TODO(fks): parse params directly from `fn`, merge with docs.tags data\n\n    const specificName = functionName.slice(functionName.lastIndexOf('.') + 1);\n    this.functions.add(new ScannedFunction(\n        functionName,\n        description,\n        summary,\n        getOrInferPrivacy(specificName, docs),\n        node,\n        docs,\n        sourceRange,\n        functionParams,\n        functionReturn));\n  }\n}\n"]}