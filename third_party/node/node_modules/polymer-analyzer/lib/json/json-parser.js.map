{"version":3,"sources":["json/json-parser.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAKH,mDAAmD;AAEnD;IACE,KAAK,CAAC,QAAgB,EAAE,GAAW,EAAE,aAAiC;QAEpE,MAAM,QAAQ,GAAG,CAAC,CAAC,aAAa,CAAC;QACjC,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QACpC,MAAM,CAAC,IAAI,kCAAkB,CAAC;YAC5B,GAAG;YACH,QAAQ;YACR,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzB,cAAc,EAAE,aAAa,CAAC,cAAc;YAC5C,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,QAAQ;SACzC,CAAC,CAAC;IACL,CAAC;CACF;AAbD,gCAaC","file":"json-parser.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {InlineDocInfo} from '../model/model';\nimport {Parser} from '../parser/parser';\n\nimport {ParsedJsonDocument} from './json-document';\n\nexport class JsonParser implements Parser<ParsedJsonDocument> {\n  parse(contents: string, url: string, inlineDocInfo: InlineDocInfo<any>):\n      ParsedJsonDocument {\n    const isInline = !!inlineDocInfo;\n    inlineDocInfo = inlineDocInfo || {};\n    return new ParsedJsonDocument({\n      url,\n      contents,\n      ast: JSON.parse(contents),\n      locationOffset: inlineDocInfo.locationOffset,\n      astNode: inlineDocInfo.astNode, isInline\n    });\n  }\n}\n"]}