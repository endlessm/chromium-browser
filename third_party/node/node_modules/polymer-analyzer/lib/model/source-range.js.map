{"version":3,"sources":["model/source-range.ts"],"names":[],"mappings":"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","file":"source-range.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Describes a range of text within a source file.\n *\n * NOTE: `line` and `column` Position properties are indexed from zero. Consider\n * displaying them to users as one-indexed numbers to match text editor\n * conventions.\n */\nexport interface SourceRange {\n  /* The resolved path to the file. */\n  readonly file: string;\n  readonly start: SourcePosition;\n  readonly end: SourcePosition;\n}\n\nexport interface SourcePosition {\n  /** The line number, starting from zero. */\n  readonly line: number;\n  /** The column offset within the line, starting from zero. */\n  readonly column: number;\n}\n\nexport interface LocationOffset {\n  /** Zero based line index. */\n  readonly line: number;\n  /** Zero based column index. */\n  readonly col: number;\n  /**\n   * The url of the source file.\n   */\n  readonly filename?: string;\n}\n\n/**\n * Corrects source ranges based on an offset.\n *\n * Source ranges for inline documents need to be corrected relative to their\n * positions in their containing documents.\n *\n * For example, if a <script> tag appears in the fifth line of its containing\n * document, we need to move all the source ranges inside that script tag down\n * by 5 lines. We also need to correct the column offsets, but only for the\n * first line of the <script> contents.\n */\nexport function correctSourceRange(\n    sourceRange: SourceRange,\n    locationOffset?: LocationOffset|null): SourceRange;\nexport function correctSourceRange(\n    sourceRange: undefined, locationOffset?: LocationOffset|null): undefined;\nexport function correctSourceRange(\n    sourceRange?: SourceRange,\n    locationOffset?: LocationOffset|null): SourceRange|undefined;\nexport function correctSourceRange(\n    sourceRange?: SourceRange,\n    locationOffset?: LocationOffset|null): SourceRange|undefined {\n  if (!locationOffset || !sourceRange) {\n    return sourceRange;\n  }\n  return {\n    file: locationOffset.filename || sourceRange.file,\n    start: correctPosition(sourceRange.start, locationOffset),\n    end: correctPosition(sourceRange.end, locationOffset)\n  };\n}\n\nexport function correctPosition(\n    position: SourcePosition, locationOffset: LocationOffset): SourcePosition {\n  return {\n    line: position.line + locationOffset.line,\n    column: position.column + (position.line === 0 ? locationOffset.col : 0)\n  };\n}\n\nexport function uncorrectSourceRange(\n    sourceRange?: SourceRange,\n    locationOffset?: LocationOffset|null): SourceRange|undefined {\n  if (locationOffset == null || sourceRange == null) {\n    return sourceRange;\n  }\n  return {\n    file: locationOffset.filename || sourceRange.file,\n    start: uncorrectPosition(sourceRange.start, locationOffset),\n    end: uncorrectPosition(sourceRange.end, locationOffset),\n  };\n}\n\nexport function uncorrectPosition(\n    position: SourcePosition, locationOffset: LocationOffset): SourcePosition {\n  const line = position.line - locationOffset.line;\n  return {\n    line: line,\n    column: position.column - (line === 0 ? locationOffset.col : 0)\n  };\n}\n\n/**\n * If the position is inside the range, returns 0. If it comes before the range,\n * it returns -1. If it comes after the range, it returns 1.\n *\n * TODO(rictic): test this method directly (currently most of its tests are\n *   indirectly, through ast-from-source-position).\n */\nexport function comparePositionAndRange(\n    position: SourcePosition, range: SourceRange, includeEdges?: boolean) {\n  // Usually we want to include the edges of a range as part\n  // of the thing, but sometimes, e.g. for start and end tags,\n  // we'd rather not.\n  if (includeEdges == null) {\n    includeEdges = true;\n  }\n  if (includeEdges == null) {\n    includeEdges = true;\n  }\n  if (position.line < range.start.line) {\n    return -1;\n  }\n  if (position.line > range.end.line) {\n    return 1;\n  }\n  if (position.line === range.start.line) {\n    if (includeEdges) {\n      if (position.column < range.start.column) {\n        return -1;\n      }\n    } else {\n      if (position.column <= range.start.column) {\n        return -1;\n      }\n    }\n  }\n  if (position.line === range.end.line) {\n    if (includeEdges) {\n      if (position.column > range.end.column) {\n        return 1;\n      }\n    } else {\n      if (position.column >= range.end.column) {\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\nexport function isPositionInsideRange(\n    position: SourcePosition,\n    range: SourceRange|undefined,\n    includeEdges?: boolean) {\n  if (!range) {\n    return false;\n  }\n  return comparePositionAndRange(position, range, includeEdges) === 0;\n}\n"]}