{"version":3,"sources":["model/element.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAGH,iDAAgF;AAMhF,oBAA4B,SAAQ,iCAAkB;IAGpD,IAAI,IAAI;QACN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IASD,OAAO,CAAC,QAAkB;QACxB,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;CACF;AAjBD,wCAiBC;AAcD,aAAqB,SAAQ,0BAAW;IAStC,YAAY,IAAiB,EAAE,QAAkB;QAC/C,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;CACF;AAlBD,0BAkBC","file":"element.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Document} from './document';\nimport {ElementBase, ElementBaseInit, ScannedElementBase} from './element-base';\nimport {Feature, Privacy} from './feature';\nimport {ScannedReference} from './reference';\n\nexport {Visitor} from '../javascript/estree-visitor';\n\nexport class ScannedElement extends ScannedElementBase {\n  tagName?: string;\n  className?: string;\n  get name() {\n    return this.className;\n  }\n  superClass?: ScannedReference;\n  privacy: Privacy;\n\n  /**\n   * For customized built-in elements, the tagname of the superClass.\n   */\n  extends?: string;\n\n  resolve(document: Document): Element {\n    return new Element(this, document);\n  }\n}\n\nexport interface ElementInit extends ElementBaseInit {\n  tagName?: string;\n  className?: string;\n  superClass?: ScannedReference;\n  extends?: string;\n}\n\ndeclare module './queryable' {\n  interface FeatureKindMap {\n    'element': Element;\n  }\n}\nexport class Element extends ElementBase implements Feature {\n  readonly tagName: string|undefined;\n\n  /**\n   * For customized built-in elements, the tagname of the builtin element that\n   * this element extends.\n   */\n  extends?: string;\n\n  constructor(init: ElementInit, document: Document) {\n    super(init, document);\n    this.tagName = init.tagName;\n    if (this.tagName) {\n      this.identifiers.add(this.tagName);\n    }\n    this.kinds.add('element');\n    this.extends = init.extends;\n  }\n}\n"]}