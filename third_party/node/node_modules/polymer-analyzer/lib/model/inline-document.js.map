{"version":3,"sources":["model/inline-document.ts"],"names":[],"mappings":"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","file":"inline-document.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\nimport * as parse5 from 'parse5';\nimport {ASTNode} from 'parse5';\nimport * as util from 'util';\n\nimport * as jsdoc from '../javascript/jsdoc';\n\nimport {Document, ScannedDocument} from './document';\nimport {ScannedFeature} from './feature';\nimport {unsafeAsMutable} from './immutable';\nimport {Resolvable} from './resolvable';\nimport {LocationOffset, SourceRange} from './source-range';\nimport {Warning} from './warning';\n\nexport interface InlineDocInfo<AstNode> {\n  astNode?: AstNode;\n  locationOffset?: LocationOffset;\n}\n\n/**\n * Represents an inline document, usually a <script> or <style> tag in an HTML\n * document.\n *\n * @template N The AST node type\n */\nexport class ScannedInlineDocument implements ScannedFeature, Resolvable {\n  type: 'html'|'javascript'|'css'|/* etc */ string;\n\n  contents: string;\n\n  /** The location offset of this document within the containing document. */\n  locationOffset: LocationOffset;\n  attachedComment?: string;\n\n  scannedDocument?: ScannedDocument;\n\n  sourceRange: SourceRange;\n  warnings: Warning[] = [];\n\n  astNode: dom5.Node;\n\n  constructor(\n      type: string, contents: string, locationOffset: LocationOffset,\n      attachedComment: string, sourceRange: SourceRange, ast: dom5.Node) {\n    this.type = type;\n    this.contents = contents;\n    this.locationOffset = locationOffset;\n    this.attachedComment = attachedComment;\n    this.sourceRange = sourceRange;\n    this.astNode = ast;\n  }\n\n  resolve(document: Document): Document|undefined {\n    if (!this.scannedDocument) {\n      // Parse error on the inline document.\n      return;\n    }\n    const inlineDocument = new InlineDocument(this.scannedDocument, document);\n    inlineDocument.resolve();\n    return inlineDocument;\n  }\n}\n\ndeclare module './queryable' {\n  interface FeatureKindMap {\n    'inline-document': InlineDocument;\n  }\n}\nexport class InlineDocument extends Document {\n  constructor(base: ScannedDocument, containerDocument: Document) {\n    super(base, containerDocument._analysisContext);\n    unsafeAsMutable(this.kinds).add('inline-document');\n    this._addFeature(containerDocument);\n  }\n}\n\nexport function getAttachedCommentText(node: ASTNode): string|undefined {\n  // When the element is defined in a document fragment with a structure of\n  // imports -> comment explaining the element -> then its dom-module, the\n  // comment will be attached to <head>, rather than being a sibling to the\n  // <dom-module>, thus the need to walk up and previous so aggressively.\n  const parentComments = dom5.nodeWalkAllPrior(node, dom5.isCommentNode);\n  const comment = <string|undefined>(\n      parentComments[0] ? parentComments[0]['data'] : undefined);\n  if (!comment || /@license/.test(comment)) {\n    return;\n  }\n  return jsdoc.unindent(comment).trim();\n}\n\nfunction isLocationInfo(loc: (parse5.LocationInfo|parse5.ElementLocationInfo)):\n    loc is parse5.LocationInfo {\n  return 'line' in loc;\n}\n\nexport function getLocationOffsetOfStartOfTextContent(node: ASTNode):\n    LocationOffset {\n  const childNodes = node.childNodes || [];\n  const firstChildNodeWithLocation = childNodes.find((n) => !!n.__location);\n  const bestLocation = firstChildNodeWithLocation ?\n      firstChildNodeWithLocation.__location :\n      node.__location;\n  if (!bestLocation) {\n    throw new Error(\n        `Couldn't extract a location offset from HTML node: ` +\n        `${util.inspect(node)}`);\n  }\n  if (isLocationInfo(bestLocation)) {\n    return {line: bestLocation.line - 1, col: bestLocation.col - 1};\n  } else {\n    return {\n      line: bestLocation.startTag.line - 1,\n      col: bestLocation.startTag.endOffset - 1,\n    };\n  }\n}\n"]}