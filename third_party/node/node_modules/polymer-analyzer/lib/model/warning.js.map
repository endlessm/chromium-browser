{"version":3,"sources":["model/warning.ts"],"names":[],"mappings":"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","file":"warning.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as chalk from 'chalk';\n\nimport {ParsedDocument} from '../parser/document';\nimport {underlineCode} from '../warning/code-printer';\n\nimport {SourceRange} from './source-range';\n\nexport interface WarningInit {\n  readonly message: string;\n  readonly sourceRange: SourceRange;\n  readonly severity: Severity;\n  readonly code: string;\n  readonly parsedDocument: ParsedDocument<any, any>;\n}\nexport class Warning {\n  readonly code: string;\n  readonly message: string;\n  readonly sourceRange: SourceRange;\n  readonly severity: Severity;\n\n  private readonly _parsedDocument: ParsedDocument<any, any>;\n\n  constructor(init: WarningInit) {\n    ({\n      message: this.message,\n      sourceRange: this.sourceRange,\n      severity: this.severity,\n      code: this.code,\n      parsedDocument: this._parsedDocument,\n    } = init);\n\n    if (!this.sourceRange) {\n      throw new Error(\n          `Attempted to construct a ${this.code} ` +\n          `warning without a source range.`);\n    }\n    if (!this._parsedDocument) {\n      throw new Error(\n          `Attempted to construct a ${this.code} ` +\n          `warning without a parsed document.`);\n    }\n  }\n\n  toString(options: Partial<WarningStringifyOptions> = {}): string {\n    const opts:\n        WarningStringifyOptions = {...defaultPrinterOptions, ...options};\n    const colorize = opts.color ? this._severityToColorFunction(this.severity) :\n                                  (s: string) => s;\n    const severity = this._severityToString(colorize);\n\n    let result = '';\n    if (options.verbosity !== 'one-line') {\n      const underlined =\n          underlineCode(this.sourceRange, this._parsedDocument, colorize);\n      if (underlined) {\n        result += underlined;\n      }\n      if (options.verbosity === 'code-only') {\n        return result;\n      }\n      result += '\\n\\n';\n    }\n\n    result +=\n        (`${this.sourceRange.file}` +\n         `(${this.sourceRange.start.line},${this.sourceRange.start.column}) ` +\n         `${severity} [${this.code}] - ${this.message}\\n`);\n\n    return result;\n  }\n\n  private _severityToColorFunction(severity: Severity) {\n    switch (severity) {\n      case Severity.ERROR:\n        return chalk.red;\n      case Severity.WARNING:\n        return chalk.yellow;\n      case Severity.INFO:\n        return chalk.green;\n      default:\n        const never: never = severity;\n        throw new Error(\n            `Unknown severity value - ${never}` +\n            ` - encountered while printing warning.`);\n    }\n  }\n\n  private _severityToString(colorize: (s: string) => string) {\n    switch (this.severity) {\n      case Severity.ERROR:\n        return colorize('error');\n      case Severity.WARNING:\n        return colorize('warning');\n      case Severity.INFO:\n        return colorize('info');\n      default:\n        const never: never = this.severity;\n        throw new Error(\n            `Unknown severity value - ${never} - ` +\n            `encountered while printing warning.`);\n    }\n  }\n\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message,\n      severity: this.severity,\n      sourceRange: this.sourceRange,\n    };\n  }\n}\n\nexport enum Severity {\n  ERROR,\n  WARNING,\n  INFO\n}\n\n// TODO(rictic): can we get rid of this class entirely?\nexport class WarningCarryingException extends Error {\n  readonly warning: Warning;\n  constructor(warning: Warning) {\n    super(warning.message);\n    this.warning = warning;\n  }\n}\n\nexport type Verbosity = 'one-line' | 'full' | 'code-only';\n\nexport interface WarningStringifyOptions {\n  readonly verbosity: Verbosity;\n  readonly color: boolean;\n}\nconst defaultPrinterOptions = {\n  verbosity: 'full' as 'full',\n  color: true\n};\n"]}