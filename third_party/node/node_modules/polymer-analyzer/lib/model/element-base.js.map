{"version":3,"sources":["model/element-base.ts"],"names":[],"mappings":"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","file":"element-base.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as estree from 'estree';\n\nimport * as jsdoc from '../javascript/jsdoc';\nimport {ParsedDocument} from '../parser/document';\n\nimport {Class, ClassInit} from './class';\nimport {Privacy} from './feature';\nimport {ImmutableArray} from './immutable';\nimport {ScannedMethod} from './method';\nimport {Attribute, Document, Event, Feature, Resolvable, ScannedAttribute, ScannedEvent, ScannedProperty, ScannedReference, SourceRange, Warning} from './model';\nimport {Severity} from './warning';\n\nexport {Visitor} from '../javascript/estree-visitor';\n\n/**\n * Base class for ScannedElement and ScannedElementMixin.\n */\nexport abstract class ScannedElementBase implements Resolvable {\n  properties = new Map<string, ScannedProperty>();\n  attributes = new Map<string, ScannedAttribute>();\n  description = '';\n  summary = '';\n  demos: {desc?: string; path: string}[] = [];\n  events: Map<string, ScannedEvent> = new Map();\n  sourceRange: SourceRange|undefined;\n  staticMethods: Map<string, ScannedMethod>;\n  methods: Map<string, ScannedMethod>;\n  astNode: estree.Node|null;\n  warnings: Warning[] = [];\n  jsdoc?: jsdoc.Annotation;\n  'slots': Slot[] = [];\n  mixins: ScannedReference[] = [];\n  privacy: Privacy;\n  abstract: boolean = false;\n  superClass?: ScannedReference = undefined;\n\n  applyHtmlComment(\n      commentText: string|undefined,\n      containingDocument: ParsedDocument<any, any>|undefined) {\n    if (commentText && containingDocument) {\n      const commentJsdoc = jsdoc.parseJsdoc(commentText);\n      // Add a Warning if there are already jsdoc tags or a description for this\n      // element.\n      if (this.sourceRange &&\n          (this.description || this.jsdoc && this.jsdoc.tags.length > 0)) {\n        this.warnings.push(new Warning({\n          severity: Severity.WARNING,\n          code: 'multiple-doc-comments',\n          message:\n              `${this.constructor.name} has both HTML doc and JSDoc comments.`,\n          sourceRange: this.sourceRange,\n          parsedDocument: containingDocument\n        }));\n      }\n      this.jsdoc =\n          this.jsdoc ? jsdoc.join(commentJsdoc, this.jsdoc) : commentJsdoc;\n      this.description = [\n        commentJsdoc.description || '',\n        this.description || ''\n      ].join('\\n\\n').trim();\n    }\n  }\n\n  resolve(_document: Document): any {\n    throw new Error('abstract');\n  }\n}\n\nexport class Slot {\n  name: string;\n  range: SourceRange;\n\n  constructor(name: string, range: SourceRange) {\n    this.name = name;\n    this.range = range;\n  }\n}\n\nexport interface Demo {\n  desc?: string;\n  path: string;\n}\n\nexport interface ElementBaseInit extends ClassInit {\n  readonly events?: Map<string, Event>;\n  readonly attributes?: Map<string, Attribute>;\n  readonly slots?: Slot[];\n}\n\n/**\n * Base class for Element and ElementMixin.\n */\nexport abstract class ElementBase extends Class implements Feature {\n  attributes: Map<string, Attribute>;\n  events: Map<string, Event>;\n  'slots': ImmutableArray<Slot> = [];\n\n  constructor(init: ElementBaseInit, document: Document) {\n    super(init, document);\n    const {\n      events,\n      attributes,\n      slots = [],\n    } = init;\n    this.slots = Array.from(slots);\n\n    // Initialization of these attributes is kinda awkward, as they're part\n    // of the inheritance system. See `inheritFrom` below which *may* be\n    // called by our superclass, but may not be.\n    this.attributes = this.attributes || new Map();\n    this.events = this.events || new Map();\n\n    if (attributes !== undefined) {\n      this._overwriteInherited(this.attributes, attributes, undefined, true);\n    }\n    if (events !== undefined) {\n      this._overwriteInherited(this.events, events, undefined, true);\n    }\n  }\n\n  protected inheritFrom(superClass: Class) {\n    // This may run as part of the call to the super constructor, so we need\n    // to validate initialization.\n    this.attributes = this.attributes || new Map();\n    this.events = this.events || new Map();\n\n    super.inheritFrom(superClass);\n    if (superClass instanceof ElementBase) {\n      this._overwriteInherited(\n          this.attributes, superClass.attributes, superClass.name);\n      this._overwriteInherited(this.events, superClass.events, superClass.name);\n    }\n\n    // TODO(justinfagnani): slots, listeners, observers, dom-module?\n    // What actually inherits?\n  }\n\n  emitAttributeMetadata(_attribute: Attribute): Object {\n    return {};\n  }\n\n  emitEventMetadata(_event: Event): Object {\n    return {};\n  }\n}\n"]}