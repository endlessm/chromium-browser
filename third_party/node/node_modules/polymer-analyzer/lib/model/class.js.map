{"version":3,"sources":["model/class.ts"],"names":[],"mappings":"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","file":"class.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as estree from 'estree';\n\nimport * as jsdocLib from '../javascript/jsdoc';\nimport {Document, Feature, Method, Privacy, Property, Reference, Resolvable, ScannedFeature, ScannedMethod, ScannedProperty, ScannedReference, Severity, SourceRange, Warning} from '../model/model';\nimport {ParsedDocument} from '../parser/document';\n\nimport {Demo} from './element-base';\nimport {ImmutableMap} from './immutable';\n\n/**\n * Represents a JS class as encountered in source code.\n *\n * We only emit a ScannedClass when there's not a more specific kind of feature.\n * Like, we don't emit a ScannedClass when we encounter an element or a mixin\n * (though in the future those features will likely extend from\n * ScannedClass/Class).\n *\n * TODO(rictic): currently there's a ton of duplicated code across the Class,\n *     Element, Mixin, PolymerElement, and PolymerMixin classes. We should\n *     really unify this stuff to a single representation and set of algorithms.\n */\nexport class ScannedClass implements ScannedFeature, Resolvable {\n  readonly name: string|undefined;\n  /** The name of the class in the local scope where it is defined. */\n  readonly localName: string|undefined;\n  readonly astNode: estree.Node;\n  readonly jsdoc: jsdocLib.Annotation;\n  readonly description: string;\n  readonly summary: string;\n  readonly sourceRange: SourceRange;\n  readonly properties: Map<string, ScannedProperty>;\n  readonly staticMethods: ImmutableMap<string, ScannedMethod>;\n  readonly methods: ImmutableMap<string, ScannedMethod>;\n  readonly superClass: ScannedReference|undefined;\n  readonly mixins: ScannedReference[];\n  readonly abstract: boolean;\n  readonly privacy: Privacy;\n  readonly warnings: Warning[];\n  readonly demos: {desc?: string; path: string}[];\n  constructor(\n      className: string|undefined, localClassName: string|undefined,\n      astNode: estree.Node, jsdoc: jsdocLib.Annotation, description: string,\n      sourceRange: SourceRange, properties: Map<string, ScannedProperty>,\n      methods: Map<string, ScannedMethod>,\n      staticMethods: Map<string, ScannedMethod>,\n      superClass: ScannedReference|undefined, mixins: ScannedReference[],\n      privacy: Privacy, warnings: Warning[], abstract: boolean, demos: Demo[]) {\n    this.name = className;\n    this.localName = localClassName;\n    this.astNode = astNode;\n    this.jsdoc = jsdoc;\n    this.description = description;\n    this.sourceRange = sourceRange;\n    this.properties = properties;\n    this.methods = methods;\n    this.staticMethods = staticMethods;\n    this.superClass = superClass;\n    this.mixins = mixins;\n    this.privacy = privacy;\n    this.warnings = warnings;\n    this.abstract = abstract;\n    const summaryTag = jsdocLib.getTag(jsdoc, 'summary');\n    this.summary = (summaryTag && summaryTag.description) || '';\n    this.demos = demos;\n  }\n\n  resolve(document: Document): Feature|undefined {\n    return new Class(this, document);\n  }\n}\n\ndeclare module '../model/queryable' {\n  interface FeatureKindMap {\n    'class': Class;\n  }\n}\n\nexport interface ClassInit {\n  readonly sourceRange: SourceRange|undefined;\n  readonly astNode: any;\n  readonly warnings?: Warning[];\n  readonly summary: string;\n  // TODO(rictic): we don't need both name and className here.\n  readonly name?: string;\n  readonly className?: string;\n  readonly jsdoc?: jsdocLib.Annotation;\n  readonly description: string;\n  readonly properties?: ImmutableMap<string, Property>;\n  readonly staticMethods: ImmutableMap<string, Method>;\n  readonly methods?: ImmutableMap<string, Method>;\n  readonly superClass?: ScannedReference|undefined;\n  readonly mixins?: ScannedReference[];\n  readonly abstract: boolean;\n  readonly privacy: Privacy;\n  readonly demos?: Demo[];\n}\nexport class Class implements Feature {\n  readonly kinds = new Set(['class']);\n  readonly identifiers = new Set<string>();\n  readonly sourceRange: SourceRange|undefined;\n  readonly astNode: any;\n  readonly warnings: Warning[];\n  readonly summary: string;\n  readonly name: string|undefined;\n\n  /**\n   * @deprecated use the `name` field instead.\n   */\n  get className() {\n    return this.name;\n  }\n  readonly jsdoc: jsdocLib.Annotation|undefined;\n  description: string;\n  readonly properties = new Map<string, Property>();\n  readonly methods = new Map<string, Method>();\n  readonly staticMethods = new Map<string, Method>();\n  readonly superClass: Reference|undefined;\n  /**\n   * Mixins that this class declares with `@mixes`.\n   *\n   * Mixins are applied linearly after the superclass, in order from first\n   * to last. Mixins that compose other mixins will be flattened into a\n   * single list. A mixin can be applied more than once, each time its\n   * members override those before it in the prototype chain.\n   */\n  readonly mixins: Reference[] = [];\n  readonly abstract: boolean;\n  readonly privacy: Privacy;\n  readonly demos: Demo[];\n  private readonly _parsedDocument: ParsedDocument<any, any>;\n\n  constructor(init: ClassInit, document: Document) {\n    ({\n      jsdoc: this.jsdoc,\n      description: this.description,\n      summary: this.summary,\n      abstract: this.abstract,\n      privacy: this.privacy,\n      astNode: this.astNode,\n      sourceRange: this.sourceRange\n    } = init);\n\n    this._parsedDocument = document.parsedDocument;\n\n    this.warnings =\n        init.warnings === undefined ? [] : Array.from(init.warnings);\n    this.demos = [...init.demos || [], ...jsdocLib.extractDemos(init.jsdoc)];\n\n    this.name = init.name || init.className;\n    if (this.name) {\n      this.identifiers.add(this.name);\n    }\n\n    if (init.superClass) {\n      this.superClass = init.superClass.resolve(document);\n    }\n    this.mixins = (init.mixins || []).map((m) => m.resolve(document));\n\n    const superClassLikes = this._getSuperclassAndMixins(document, init);\n    for (const superClassLike of superClassLikes) {\n      this.inheritFrom(superClassLike);\n    }\n\n    if (init.properties !== undefined) {\n      this._overwriteInherited(\n          this.properties, init.properties, undefined, true);\n    }\n    if (init.methods !== undefined) {\n      this._overwriteInherited(this.methods, init.methods, undefined, true);\n    }\n    if (init.staticMethods !== undefined) {\n      this._overwriteInherited(\n          this.staticMethods, init.staticMethods, undefined, true);\n    }\n  }\n\n  protected inheritFrom(superClass: Class) {\n    this._overwriteInherited(\n        this.staticMethods, superClass.staticMethods, superClass.name);\n    this._overwriteInherited(\n        this.properties, superClass.properties, superClass.name);\n    this._overwriteInherited(this.methods, superClass.methods, superClass.name);\n  }\n\n  /**\n   * This method is applied to an array of members to overwrite members lower in\n   * the prototype graph (closer to Object) with members higher up (closer to\n   * the final class we're constructing).\n   *\n   * @param . existing The array of members so far. N.B. *This param is\n   *   mutated.*\n   * @param . overriding The array of members from this new, higher prototype in\n   *   the graph\n   * @param . overridingClassName The name of the prototype whose members are\n   *   being applied over the existing ones. Should be `undefined` when\n   *   applyingSelf is true\n   * @param . applyingSelf True on the last call to this method, when we're\n   *   applying the class's own local members.\n   */\n  protected _overwriteInherited<P extends PropertyLike>(\n      existing: Map<string, P>, overriding: ImmutableMap<string, P>,\n      overridingClassName: string|undefined, applyingSelf = false) {\n    for (const [key, overridingVal] of overriding) {\n      const newVal = Object.assign({}, overridingVal, {\n        inheritedFrom: overridingVal['inheritedFrom'] || overridingClassName\n      });\n      if (existing.has(key)) {\n        /**\n         * TODO(rictic): if existingVal.privacy is protected, newVal should be\n         *    protected unless an explicit privacy was specified.\n         *    https://github.com/Polymer/polymer-analyzer/issues/631\n         */\n        const existingValue = existing.get(key)!;\n        if (existingValue.privacy === 'private') {\n          let warningSourceRange = this.sourceRange!;\n          if (applyingSelf) {\n            warningSourceRange = newVal.sourceRange || this.sourceRange!;\n          }\n          this.warnings.push(new Warning({\n            code: 'overriding-private',\n            message: `Overriding private member '${overridingVal.name}' ` +\n                `inherited from ${existingValue.inheritedFrom || 'parent'}`,\n            sourceRange: warningSourceRange,\n            severity: Severity.WARNING,\n            parsedDocument: this._parsedDocument,\n          }));\n        }\n      }\n      existing.set(key, newVal);\n    }\n  }\n\n  /**\n   * Returns the elementLikes that make up this class's prototype chain.\n   *\n   * Should return them in the order that they're constructed in JS\n   * engine (i.e. closest to HTMLElement first, closest to `this` last).\n   */\n  protected _getSuperclassAndMixins(document: Document, _init: ClassInit) {\n    const mixins = this.mixins.map(\n        (m) => this._resolveReferenceToSuperClass(m, document, 'class'));\n    const superClass =\n        this._resolveReferenceToSuperClass(this.superClass, document, 'class');\n\n    const prototypeChain: Class[] = [];\n    if (superClass) {\n      prototypeChain.push(superClass);\n    }\n    for (const mixin of mixins) {\n      if (mixin) {\n        prototypeChain.push(mixin);\n      }\n    }\n\n    return prototypeChain;\n  }\n\n  protected _resolveReferenceToSuperClass(\n      reference: Reference|undefined, document: Document, kind: 'class'): Class\n      |undefined {\n    if (!reference || reference.identifier === 'HTMLElement') {\n      return undefined;\n    }\n    const superElements = document.getFeatures({\n      kind: kind,\n      id: reference.identifier,\n      externalPackages: true,\n      imported: true,\n    });\n\n    if (superElements.size < 1) {\n      this.warnings.push(new Warning({\n        message: `Unable to resolve superclass ${reference.identifier}`,\n        severity: Severity.WARNING,\n        code: 'unknown-superclass',\n        sourceRange: reference.sourceRange!,\n        parsedDocument: this._parsedDocument,\n      }));\n      return undefined;\n    } else if (superElements.size > 1) {\n      this.warnings.push(new Warning({\n        message: `Multiple superclasses found for ${reference.identifier}`,\n        severity: Severity.WARNING,\n        code: 'unknown-superclass',\n        sourceRange: reference.sourceRange!,\n        parsedDocument: this._parsedDocument,\n      }));\n      return undefined;\n    }\n    return superElements.values().next().value;\n  }\n\n  emitMetadata(): object {\n    return {};\n  }\n\n  emitPropertyMetadata(_property: Property): object {\n    return {};\n  }\n\n  emitMethodMetadata(_method: Method): object {\n    return {};\n  }\n}\n\n\nexport interface PropertyLike {\n  name: string;\n  sourceRange?: SourceRange;\n  inheritedFrom?: string;\n  privacy?: Privacy;\n}\n"]}