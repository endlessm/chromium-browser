{"version":3,"sources":["model/resolvable.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAaH,sBAA6B,CAAM;IACjC,MAAM,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC;AACtD,CAAC;AAFD,oCAEC","file":"resolvable.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Document} from './document';\nimport {Feature, ScannedFeature} from './feature';\n\n/**\n * A ScannedFeature that needs to resolve other Features to build its final\n * representation.\n */\nexport interface Resolvable extends ScannedFeature {\n  resolve(document: Document): Feature|undefined;\n}\n\nexport function isResolvable(x: any): x is Resolvable {\n  return x.resolve && typeof x.resolve === 'function';\n}\n"]}