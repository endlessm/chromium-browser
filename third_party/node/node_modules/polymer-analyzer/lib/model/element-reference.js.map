{"version":3,"sources":["model/element-reference.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAuBH;IAQE,YAAY,UAAmC,EAAE,SAAmB;QAF3D,UAAK,GAAyB,IAAI,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAGpE,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED,IAAI,WAAW;QACb,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC;CACF;AAnBD,4CAmBC;AAED;IAOE,YAAY,OAAe,EAAE,WAAwB,EAAE,GAAc;QAL5D,eAAU,GAAG,IAAI,GAAG,EAAqB,CAAC;QAG1C,aAAQ,GAA4B,EAAE,CAAC;QAG9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC9C,CAAC;CACF;AAhBD,0DAgBC","file":"element-reference.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as dom5 from 'dom5';\n\nimport {Feature, Resolvable, SourceRange, Warning} from '../model/model';\n\nimport {Document} from './document';\nimport {ImmutableArray, ImmutableMap, ImmutableSet} from './immutable';\n\nexport interface Attribute {\n  readonly name: string;\n  readonly sourceRange: SourceRange;\n  readonly nameSourceRange: SourceRange;\n  readonly valueSourceRange: SourceRange|undefined;\n  readonly value?: string;\n}\n\ndeclare module '../model/queryable' {\n  interface FeatureKindMap {\n    'element-reference': ElementReference;\n  }\n}\n\nexport class ElementReference implements Feature {\n  readonly tagName: string;\n  readonly attributes: ImmutableMap<string, Attribute>;\n  readonly sourceRange: SourceRange;\n  readonly astNode: dom5.Node;\n  readonly warnings: ImmutableArray<Warning>;\n  readonly kinds: ImmutableSet<string> = new Set(['element-reference']);\n\n  constructor(scannedRef: ScannedElementReference, _document: Document) {\n    this.tagName = scannedRef.tagName;\n    this.attributes = scannedRef.attributes;\n    this.sourceRange = scannedRef.sourceRange;\n    this.astNode = scannedRef.astNode;\n    this.warnings = scannedRef.warnings;\n  }\n\n  get identifiers(): ImmutableSet<string> {\n    return new Set([this.tagName]);\n  }\n}\n\nexport class ScannedElementReference implements Resolvable {\n  readonly tagName: string;\n  readonly attributes = new Map<string, Attribute>();\n  readonly sourceRange: SourceRange;\n  readonly astNode: dom5.Node;\n  readonly warnings: ImmutableArray<Warning> = [];\n\n  constructor(tagName: string, sourceRange: SourceRange, ast: dom5.Node) {\n    this.tagName = tagName;\n    this.sourceRange = sourceRange;\n    this.astNode = ast;\n  }\n\n  resolve(document: Document): ElementReference {\n    return new ElementReference(this, document);\n  }\n}\n"]}