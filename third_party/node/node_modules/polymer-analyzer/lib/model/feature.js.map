{"version":3,"sources":["model/feature.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAQH;IAgBE,YACI,WAAyB,EAAE,OAAa,EACxC,QAAiD;QAjB5C,UAAK,GAAqC,IAAI,GAAG,EAAU,CAAC;QAC5D,gBAAW,GAAqC,IAAI,GAAG,EAAU,CAAC;QAiBzE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;IACjC,CAAC;CACF;AAvBD,0BAuBC;AAED;IAmBE,YACI,WAAyB,EAAE,OAAa,EAAE,WAAoB,EAC9D,KAAwB,EAAE,QAAoB;QAChD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;IACjC,CAAC;CACF;AA5BD,wCA4BC","file":"feature.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as jsdoc from '../javascript/jsdoc';\n\nimport {ImmutableArray, ImmutableSet} from './immutable';\nimport {SourceRange} from './source-range';\nimport {Warning} from './warning';\n\nexport abstract class Feature {\n  readonly kinds: Set<string>|ImmutableSet<string> = new Set<string>();\n  readonly identifiers: Set<string>|ImmutableSet<string> = new Set<string>();\n\n  /** Tracks the source that this feature came from. */\n  readonly sourceRange?: SourceRange;\n\n  /**\n   * The AST Node, if any, that corresponds to this feature in its containing\n   * document.\n   */\n  readonly astNode?: any;\n\n  /** Warnings that were encountered while processing this feature. */\n  readonly warnings: Array<Warning>|ImmutableArray<Warning>;\n\n  constructor(\n      sourceRange?: SourceRange, astNode?: any,\n      warnings?: Array<Warning>|ImmutableArray<Warning>) {\n    this.sourceRange = sourceRange;\n    this.astNode = astNode;\n    this.warnings = warnings || [];\n  }\n}\n\nexport abstract class ScannedFeature {\n  // TODO(justinfagnani): why is this here and not on Feature?\n  readonly description?: string;\n\n  // TODO(rictic): this is the wrong place to put a jsdoc annotation.\n  readonly jsdoc?: jsdoc.Annotation;\n\n  /** Tracks the source that this feature came from. */\n  readonly sourceRange: SourceRange|undefined;\n\n  /**\n   * The AST Node, if any, that corresponds to this feature in its containing\n   * document.\n   */\n  readonly astNode?: any;\n\n  /** Warnings that were encountered while processing this feature. */\n  readonly warnings: Array<Warning>|ImmutableArray<Warning>;\n\n  constructor(\n      sourceRange?: SourceRange, astNode?: any, description?: string,\n      jsdoc?: jsdoc.Annotation, warnings?: Warning[]) {\n    this.sourceRange = sourceRange;\n    this.astNode = astNode;\n    this.description = description;\n    this.jsdoc = jsdoc;\n    this.warnings = warnings || [];\n  }\n}\n\nexport type Privacy = 'public' | 'private' | 'protected';\n"]}