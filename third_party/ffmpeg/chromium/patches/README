Autorename:
  autorename_* files are renamed copies of various files that would cause
    base name collisions from mac libtool. These files are generated
    by generate_gn.py. https://chromium-review.googlesource.com/#/c/274543/

Current patches:
  .gitignore
    Has a "Chromium stuff" section.

  compat/atomics/win32/stdatomic.h
    Commented out atomic_compare_exchange_strong, since it doesn't compile and
    isn't used.

  compat/msvcrt/{snprintf.c,snprintf.h}
  compat/{strtod.c,strtod.h}
    Commit b5269bfb48c71fe17c02eee00c71b1e9762497db changes these files and
    relevant build rules to fix inconsistent linkage when building with MSVC.
    The rules/files expose overriden symbols as externs and force inject these
    headers when building with the component build.
    strtod.h was added, so it may not appear in diffs that ignore additions.
    f3299330654ac1b40c50b3cbcae619f42eb7d838 added an include to snprintf.c.
    4fe9bb85b83fffe4c3640493ef6655b0992a822c re-adds an "undef strod" and
    new strtod decl to fix Windows compilation issues to strtod.c .

  configure
    Commented out a section that creates symlink for source_path. Using symlink
    causes windows builds to fail (cl.exe cant find the files).

    Pinned older mipsel minimum ISA detection logic, including removal of
    add_cflags "-mips64", which conflicts with --extra-cflags=-mips64r6 for
    mips64el. In M56 roll, returned to previous logic here to prevent population
    of CFLAGS etc with various -mips32r* which broke builds.

    Turned off check for stdatomic.h, since it is banned in chromium.

    Commented out pkg-config checks for libopus since we use Chromium's
    copy.

  libavcodec/avcodec.h
    Don't deprecate avcodec_decode_audio4 and avcodec_decode_video2.
    https://crbug.com/661350

    Don't deprecate av_packet_split_side_data. http://crbug.com/720142

  !!!SECURITY SENSITIVE ISSUE PLEASE VERIFY AFTER EACH FFMPEG ROLL!!!
  Remove UNCHECKED_BITSTREAM_READER defines in libavcodec/
    Remove "#define UNCHECKED_BITSTREAM_READER 1" from all codecs.
    In Chromium, all codecs should use the safe bitstream reader.

  libavcodec/decode.c
    Check expanded side data properly.
    https://trac.ffmpeg.org/ticket/6439

  libavcodec/flacdsp.c
    #define SUINT for better overflow detection

  libavcodec/libopusdec.c, libavcodec/opus.c
    Changes to support ambisonic_channels.

  libavformat/id3v2.c
    Change to 'return' in read_chapter to 'goto end' to fix a minor memory leak.
    crbug.com/689339

  libavformat/log.{c,h}
  libavformat/internal.{h}
    Changes to #define logging functions to nothing to save ~158kb of strings.

  libavformat/mov.c
    Always use av_realloc() for |extradata|. https://crbug.com/721872

    Fix ctts processing when sidx processing is enabled. http://crbug.com/738595

    Fix issues with mov_read_trun(). http://crbug.com/750009

  libavformat/matroskadec.c
    Add CONFIG_LZO and CONFIG_SIPR_DECODER (and other CONFIG_*) checks to remove
    code that may be a security risk. Discuss with cevans@ before removing.

    Remove extra const from static EbmlSyntax arrays. This fixes windows
    compile error C4114, since EbmlSyntax struct is already defined with const.
    TODO: push upstream.

    Revert upstream 7a9db61da39fbfaa910c10c0719be595a7d06f3d to fix seeking with
    text tracks.  crbug.com/681886 .

  libavformat/mp3dec.c
    Don't change the start_time in mp3_parse_info_tag as Chromium should handle
    it. https://crbug.com/504623

    Change to mp3_read_header: check for the custom "skip_id3v1_tag" metadata
    flag we set in Chromium code, to avoid the costly reads of id3v1 tags.
    Also av_dict_free the dictionary before overwriting it to prevent leaks.
    See crbug.com/703965 (upstream patch discussion:
    http://ffmpeg.org/pipermail/ffmpeg-devel/2017-April/209953.html).

  libavformat/utils.c
    Locally disable deprecation warnings related to AVStream.codec access until
    upstream stops using deprecated fields.

  libavformat/wavdec.c
    Exclude code blocks using #if to remove references to symbols not in our
    builds which some toolchains don't elide, for each of
    CONFIG_SPDIF_DEMUXER and CONFIG_W64_DEMUXER.

  libavutil/arm/intmath.h
    Remove static av_always_inline av_const unsigned av_clip_uintp2_arm() and
    av_clip_intp2_arm() due to compilation failure.

  libavutil/mem.c
    Enable av_max_alloc(0) to remove alloc size bound.

  libavutil/timer.h
    C++11 compatability for string concatenation (http://crbug.com/454590).
    Add spaces between string literals and tokens.

  libavutil/x86/x86inc.asm
    https://chromium-review.googlesource.com/#/c/272274/
    Fixes the conditionals on Linux so that these symbols are hidden and
    adds the Chromium-specific private_extern extension for hiding these
    symbols on OSX.
